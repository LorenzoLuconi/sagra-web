/**
 * Generated by @openapi-codegen
 *
 * @version v0
 */
export type ProductRequest = {
  /**
   * @minLength 1
   */
  name: string;
  note?: string;
  /**
   * @format int64
   */
  departmentId: number;
  /**
   * @format int64
   */
  courseId: number;
  /**
   * @minimum 0
   */
  price: number;
  /**
   * Id prodotto collegato, non può essere modificato
   *
   * @format int64
   */
  parentId?: number;
};

export type ErrorResource = {
  message?: string;
  /**
   * @uniqueItems true
   */
  invalidValues?: InvalidValue[];
};

export type InvalidValue = {
  field?: string;
  value?: void;
  message?: string;
};

export type Product = {
  /**
   * @format int64
   */
  id: number;
  name: string;
  note?: string;
  /**
   * @format int64
   */
  departmentId: number;
  /**
   * @format int64
   */
  courseId: number;
  price: number;
  sellLocked: boolean;
  /**
   * @format int32
   */
  initialQuantity: number;
  /**
   * @format int32
   */
  availableQuantity: number;
  /**
   * @format int64
   */
  parentId?: number;
  /**
   * @format date-time
   */
  created: string;
  /**
   * @format date-time
   */
  lastUpdate: string;
};

export type ProductQuantityUpdate = {
  /**
   * @format int32
   */
  quantityVariation: number;
};

export type ErrorResourceNotEnoughQuantity = {
  message?: string;
  invalidProducts?: InvalidProduct[];
};

export type InvalidProduct = {
  /**
   * @format int64
   */
  productId?: number;
  message?: string;
  error?: "NOT_ENOUGH_QUANTITY" | "LOCKED";
};

export type OrderRequest = {
  /**
   * @minLength 1
   */
  customer: string;
  note?: string;
  takeAway?: boolean;
  /**
   * @format int32
   * @minimum 0
   */
  serviceNumber: number;
  /**
   * @format int64
   */
  discountId?: number;
  /**
   * @minItems 1
   */
  products: OrderedProductRequest[];
};

export type OrderedProductRequest = {
  /**
   * @format int64
   */
  productId: number;
  /**
   * @format int32
   * @minimum 1
   */
  quantity: number;
  note?: string;
};

export type Order = {
  /**
   * @format int64
   */
  id: number;
  customer: string;
  note?: string;
  takeAway: boolean;
  /**
   * @format int32
   */
  serviceNumber: number;
  serviceCost: number;
  totalAmount: number;
  discountRate?: number;
  username: string;
  /**
   * @format date-time
   */
  created: string;
  /**
   * @format date-time
   */
  lastUpdate: string;
  products: OrderedProduct[];
};

export type OrderedProduct = {
  /**
   * @format int64
   */
  productId: number;
  /**
   * @format int32
   */
  quantity: number;
  price: number;
  note?: string;
};

export type Monitor = {
  /**
   * @format int64
   */
  id?: number;
  /**
   * @minLength 1
   */
  name: string;
  /**
   * @minItems 1
   */
  products: number[];
};

export type DiscountRequest = {
  /**
   * @minLength 1
   */
  name: string;
  /**
   * @maximum 100
   * @minimum 1
   */
  rate: number;
};

/**
 * Sconto
 */
export type Discount = {
  /**
   * @format int64
   */
  id: number;
  name: string;
  rate: number;
};

export type DepartmentRequest = {
  /**
   * @minLength 1
   */
  name: string;
};

/**
 * Reparto
 */
export type Department = {
  /**
   * @format int64
   */
  id: number;
  name: string;
};

export type CourseRequest = {
  /**
   * @minLength 1
   */
  name: string;
};

/**
 * Portata
 */
export type Course = {
  /**
   * @format int64
   */
  id: number;
  name: string;
};

export type StatsOrder = {
  /**
   * Numero totale dei coperti
   *
   * @format int64
   */
  totalServiceNumber: number;
  /**
   * Totale ammontare degli ordini
   */
  totalAmount: number;
  /**
   * Numero di ordini registrati
   *
   * @format int64
   */
  count: number;
  /**
   * Dettagli dei prodotti ordinati
   */
  products: StatsOrderedProducts[];
};

export type StatsOrderedProducts = {
  /**
   * @format int64
   */
  productId: number;
  /**
   * Totale importo prodotto venduto
   */
  totalAmount: number;
  /**
   * Quantità venduta del prodotto
   *
   * @format int64
   */
  count: number;
};

export type Count = {
  /**
   * @format int64
   */
  count: number;
};

export type MonitorProductView = {
  name: string;
  /**
   * @format int32
   */
  initialQuantity: number;
  /**
   * @format int32
   */
  availableQuantity: number;
};

export type MonitorView = {
  name: string;
  /**
   * @format date-time
   */
  lastUpdate: string;
  products: MonitorProductView[];
};
